from datetime import datetime
from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy


app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///site.db'
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(20), unique=True, nullable=False)
    password = db.Column(db.String(60), nullable=False)
    name = db.Column(db.String(100), nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)
    birthdate = db.Column(db.Date, nullable=False)
    posts = db.relationship('Post', backref='author', lazy=True)

class Post(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    content = db.Column(db.Text, nullable=False)
    created_at = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)
    views = db.Column(db.Integer, nullable=False, default=0)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))

@app.route('/')
def index():
    return render_template('login.html')

@app.route('/login', methods=['POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']

        user = User.query.filter_by(username=username, password=password).first()

        if user:
            return redirect(url_for('list'))
        else:
            return redirect(url_for('index'))

@app.route('/가입약관')
def before_signup():
    return render_template('가입약관.html')

@app.route('/post/apply')
def apply():
    return render_template('write.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
    # 양식에서 입력된 데이터 가져오기
        username = request.form['username']
        password = request.form['password']
        name = request.form['name']
        email = request.form['email']

    # 생년월일 정보 가져오기
        birth_year = request.form['birth-year']
        birth_month = request.form['birth-month']
        birth_date = request.form['birth-date']

    # 생년월일을 date 객체로 변환
        birthdate = datetime(int(birth_year), int(birth_month), int(birth_date))

    # 사용자 객체 생성 및 데이터베이스에 추가
        user = User(username=username, password=password,
                    name=name, email=email, birthdate=birthdate)
        db.session.add(user)
        db.session.commit()

        return redirect(url_for('index'))
    return render_template('signup_form.html')


@app.route('/list')
def list():
    posts = Post.query.all()
    return render_template('list.html', posts=posts)

@app.route('/post')
def get_post():
    posts = Post.query.all()
    return render_template('list.html', posts=posts)

@app.route('/view/<int:id>')
def viewpost(id):
    post = Post.query.filter_by(id=id).first()
    return render_template('view.html', post=post)

@app.route('/post/write', methods=['GET', 'POST'])
def create():
    if request.method == 'POST':
        title = request.form['title']
        content = request.form['content']
        new_post = Post(title=title, content=content)
        db.session.add(new_post)
        db.session.commit()
        return render_template('view.html', post=new_post)
    return render_template('write.html')

@app.route('/edit/<int:post_id>', methods=['GET', 'POST'])
def edit(post_id):
    
    post = Post.query.get_or_404(post_id)
    
    if request.method == 'POST':
        
        title = request.form['title']
        content = request.form['content']
        
        post.title = title
        post.content = content
        
        db.session.commit()
        
        return redirect(url_for('get_post', post_id=post.id))
    
    return render_template('edit.html', post=post)

with app.app_context():
    db.create_all()

if __name__ == '__main__':
    app.run(debug=True)
